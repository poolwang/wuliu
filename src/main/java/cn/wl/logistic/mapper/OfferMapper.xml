<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wl.logistic.mapper.OfferMapper">
  <resultMap id="BaseResultMap" type="cn.wl.logistic.pojo.Offer">
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_detail_id" jdbcType="BIGINT" property="orderDetailId" />
    <result column="offer_volumn_unit_price" jdbcType="DOUBLE" property="offerVolumnUnitPrice" />
    <result column="offer_weight_unit_price" jdbcType="DOUBLE" property="offerWeightUnitPrice" />
    <result column="offer_take_expense" jdbcType="DOUBLE" property="offerTakeExpense" />
    <result column="offer_valumn" jdbcType="DOUBLE" property="offerValumn" />
    <result column="offer_weight" jdbcType="DOUBLE" property="offerWeight" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_detail_id, offer_volumn_unit_price, offer_weight_unit_price, offer_take_expense, 
    offer_valumn, offer_weight
  </sql>
  <select id="selectByExample" parameterType="cn.wl.logistic.pojo.OfferExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from offer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.wl.logistic.pojo.OfferExample">
    delete from offer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wl.logistic.pojo.Offer">
    insert into offer (order_id, order_detail_id, offer_volumn_unit_price, 
      offer_weight_unit_price, offer_take_expense, offer_valumn, 
      offer_weight)
    values (#{orderId,jdbcType=BIGINT}, #{orderDetailId,jdbcType=BIGINT}, #{offerVolumnUnitPrice,jdbcType=DOUBLE}, 
      #{offerWeightUnitPrice,jdbcType=DOUBLE}, #{offerTakeExpense,jdbcType=DOUBLE}, #{offerValumn,jdbcType=DOUBLE}, 
      #{offerWeight,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.wl.logistic.pojo.Offer">
    insert into offer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderDetailId != null">
        order_detail_id,
      </if>
      <if test="offerVolumnUnitPrice != null">
        offer_volumn_unit_price,
      </if>
      <if test="offerWeightUnitPrice != null">
        offer_weight_unit_price,
      </if>
      <if test="offerTakeExpense != null">
        offer_take_expense,
      </if>
      <if test="offerValumn != null">
        offer_valumn,
      </if>
      <if test="offerWeight != null">
        offer_weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderDetailId != null">
        #{orderDetailId,jdbcType=BIGINT},
      </if>
      <if test="offerVolumnUnitPrice != null">
        #{offerVolumnUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="offerWeightUnitPrice != null">
        #{offerWeightUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="offerTakeExpense != null">
        #{offerTakeExpense,jdbcType=DOUBLE},
      </if>
      <if test="offerValumn != null">
        #{offerValumn,jdbcType=DOUBLE},
      </if>
      <if test="offerWeight != null">
        #{offerWeight,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wl.logistic.pojo.OfferExample" resultType="java.lang.Long">
    select count(*) from offer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update offer
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderDetailId != null">
        order_detail_id = #{record.orderDetailId,jdbcType=BIGINT},
      </if>
      <if test="record.offerVolumnUnitPrice != null">
        offer_volumn_unit_price = #{record.offerVolumnUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.offerWeightUnitPrice != null">
        offer_weight_unit_price = #{record.offerWeightUnitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.offerTakeExpense != null">
        offer_take_expense = #{record.offerTakeExpense,jdbcType=DOUBLE},
      </if>
      <if test="record.offerValumn != null">
        offer_valumn = #{record.offerValumn,jdbcType=DOUBLE},
      </if>
      <if test="record.offerWeight != null">
        offer_weight = #{record.offerWeight,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update offer
    set order_id = #{record.orderId,jdbcType=BIGINT},
      order_detail_id = #{record.orderDetailId,jdbcType=BIGINT},
      offer_volumn_unit_price = #{record.offerVolumnUnitPrice,jdbcType=DOUBLE},
      offer_weight_unit_price = #{record.offerWeightUnitPrice,jdbcType=DOUBLE},
      offer_take_expense = #{record.offerTakeExpense,jdbcType=DOUBLE},
      offer_valumn = #{record.offerValumn,jdbcType=DOUBLE},
      offer_weight = #{record.offerWeight,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>