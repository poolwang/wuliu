<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wl.logistic.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="cn.wl.logistic.pojo.Customer">
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="base_id" jdbcType="BIGINT" property="baseId" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="base_name" jdbcType="VARCHAR" property="baseName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    customer_id, customer_name, phone, email, address, gender, remark, id_card, user_id, 
    base_id, realname, base_name
  </sql>
  <select id="selectByExample" parameterType="cn.wl.logistic.pojo.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
     <if test="orderByClause != null">
      order by ${orderByClause}
    </if> 
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from customer
    where customer_id = #{customerId,jdbcType=BIGINT}
  </delete>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from customer
    where customer_id = #{customerId,jdbcType=BIGINT}
  </select>
  
  <insert id="insert" parameterType="cn.wl.logistic.pojo.Customer">
   insert into customer
   	(customer_name, phone, email, address, gender, remark, id_card, user_id, base_id) 
   values (#{customerName}, #{phone}, #{email}, #{address}, #{gender}, #{remark}, #{idCard}, #{userId}, #{baseId}) 
  </insert>
  
   <update id="updateByPrimaryKeySelective" parameterType="cn.wl.logistic.pojo.Customer">
    update customer
    <set>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="baseId != null">
        base_id = #{baseId,jdbcType=BIGINT},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=BIGINT}
  </update>
  
  </mapper>